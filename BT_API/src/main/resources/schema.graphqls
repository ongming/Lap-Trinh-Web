type Query {
    allUsers: [User]
    userById(id: ID!): User
    allProducts: [Product]
    allProductsSortedByPrice: [Product]
    productById(id: ID!): Product
    productsByCategory(id: ID!): [Product]
    allCategories: [Category]
    categoryById(id: ID!): Category
}

type Mutation {
    createUser(fullname: String!, email: String!, password: String!, phone: String!): User
    updateUser(id: ID!, fullname: String, email: String, password: String, phone: String): User
    deleteUser(id: ID!): Boolean
    addCategoryToUser(userId: ID!, categoryId: ID!): User
    createProduct(title: String!, quantity: Int!, desc: String!, price: Float!, userid: ID!): Product
    updateProduct(id: ID!, title: String, quantity: Int, desc: String, price: Float, userid: ID): Product
    deleteProduct(id: ID!): Boolean
    createCategory(name: String!, images: String!): Category
    updateCategory(id: ID!, name: String, images: String): Category
    deleteCategory(id: ID!): Boolean
}

type User {
    id: ID
    fullname: String
    email: String
    password: String
    phone: String
    products: [Product]
    categories: [Category]
}

type Product {
    id: ID
    title: String
    quantity: Int
    desc: String
    price: Float
    user: User
}

type Category {
    id: ID
    name: String
    images: String
    users: [User]
}